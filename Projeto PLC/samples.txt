"(begin (if (== 3 3) 10 20))"
"(begin (if (> 4 3) 10 20))"
"(begin (if (>= 4 3) 10 20))"
"(begin (if (<= 2 3) 10 20))"
"(begin (if (It? 2 3) 10 20))"
"(begin (if (It? 2 3) (/ 4 2) (/ 15 3)))"
"(begin (if (It? 2 3) (/ 4 0) (/ 15 3)))"
"(begin (if (It? 2 3) (mod 4 2) (mod 10 3)))"
"(begin (if (It? 2 3) (mod 4 2) (mod 10 3)) (comment ola tudo bom))"
"(begin (if (It? 2 3) (mod 4 2) (mod 10 3)) (if (It? 2 3) (mod 4 2) (mod 10 3)))"
"(begin (define f (lambda (x) (+ x 10))) (define result (f (car '(50 34 567 433 22 23 2345 "ok" (6 87 6))))) (comment ola tudo bom) result)"
"(begin (cons 2 '(3 4 5)))"
"(begin (define f (lambda (a) (if (== a 10) a (f (+ a 1))))) (f 1))"
"(begin (define (f a) (if (== a 10) a (f (+ a 1)))))"
"(begin (define (f a) (if (== a 0) 1 (* a (f (- a 1))))) (f 5))"
"(begin (eqv? 2 3))"
"(begin (eqv? '(2 3) '(2 3)))"
"(begin (eqv? '(2 3 . 5)  '(2 3 . 6)))"